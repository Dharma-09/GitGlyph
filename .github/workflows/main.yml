name: Track External Repository Issues

on:
  schedule:
    - cron: "*/15000000 * * * *" # Run every 15 minutes
  workflow_dispatch: # Allows you to trigger the workflow manually

jobs:
  track-issues:
    runs-on: ubuntu-latest

    steps:
    - name: Query Issues from External Repo
      env:
        GITHUB_PAT: ${{ secrets.GITH_TOKEN }}
        TARGET_OWNER: "Dharma-09"          # Replace with the owner of the repo you want to track
        TARGET_REPO: "Arjun"           # Replace with the repo name
        LABEL: "good-first-issue"           # Replace with the label you want to track
      run: |
        # GraphQL query to fetch issues
        QUERY='{
          "query": "query($owner: String!, $repo: String!, $label: String!) {
            repository(owner: $owner, name: $repo) {
              issues(first: 10, labels: [$label], states: OPEN) {
                edges {
                  node {
                    title
                    url
                    createdAt
                    author {
                      login
                    }
                  }
                }
              }
            }
          }",
          "variables": {
            "owner": "'"$TARGET_OWNER"'",
            "repo": "'"$TARGET_REPO"'",
            "label": "'"$LABEL"'"
          }
        }'

        # Call GitHub GraphQL API
        RESPONSE=$(curl -s -X POST -H "Authorization: Bearer $GITH_TOKEN" \
          -H "Content-Type: application/json" \
          -d "$QUERY" \
          https://api.github.com/graphql)

        echo "GraphQL Response: $RESPONSE"

        # Extract and format issues
        ISSUES=$(echo "$RESPONSE" | jq -r '.data.repository.issues.edges[] | "Title: \(.node.title)\nURL: \(.node.url)\nAuthor: \(.node.author.login)\nCreated: \(.node.createdAt)\n"')

        if [ -z "$ISSUES" ]; then
          echo "No new issues found with label '$LABEL' in $TARGET_OWNER/$TARGET_REPO."
        else
          echo -e "New Issues:\n$ISSUES"
          # You can add a step here to send notifications (Slack, email, etc.)
        fi
